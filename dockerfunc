#!/bin/bash

# inspired by @jfrazelle

### docker client aliases
d_p() {
	docker ps "${@}"
}

d_c() {
	docker rm -f `docker ps -aq` 2> /dev/null
	docker rm -v `docker ps --filter status=exited -q 2>/dev/null` 2>/dev/null
	docker rmi `docker images --filter dangling=true -q 2>/dev/null` 2>/dev/null
	echo "cleaned"
}

# simple wrapping method that follows a containers logs
_docker_logwrap() {
	docker logs -f `$1`
}
_docker_relieson(){ # taken from: https://github.com/jfrazelle/dotfiles/blob/master/.dockerfunc
	local containers=$@

	for container in $containers; do
		local state=$(docker inspect --format "{{.State.Running}}" $container 2>/dev/null)

		if [[ "$state" == "false" ]] || [[ "$state" == "" ]]; then
			echo "$container is not running, starting it for you."
			$container
		fi
	done
}

### container aliases
# Usage: d_vim ~/path/to/file (just make sure this is mounted, obvs)
d_vim() {
	vimargs=""
	if [ "${1}" != "" ]; then
		vimargs=`echo "$(cd "$(dirname "$1")"; pwd)/$(basename "$1")"`
	fi
	docker run --rm \
		-v /private/etc/passwd:/etc/passwd:ro \
		-v /private/etc/group:/etc/group:ro \
		-v $HOME:$HOME \
		-w $HOME \
		-u $(id -u) \
		-ti pemcconnell/vimothy:0.1 vim $vimargs
}

d_jenkins() {
	docker run \
		-p 8080:8080 \
		-p 50000:50000 \
		-v $(realpath /etc/passwd):/etc/passwd:ro \
		-v $(realpath /etc/group):/etc/group:ro \
		-v $HOME/v/jenkins_home:/var/jenkins_home \
		-w $HOME \
		-u $(id -u) \
		--name jenkins \
		-d \
		jenkins:latest
}

d_postgres() {
	if [ "${1}" = "l" ]; then _docker_logwrap "${FUNCNAME[0]}"; return; fi
	docker run \
		-p 5432:5432 \
		-e POSTGRES_USER=root \
		-e POSTGRES_PASSWORD=pass \
		--name postgres \
		-d \
		postgres:9.6
}

d_mysql() {
	if [ "${1}" = "l" ]; then _docker_logwrap "${FUNCNAME[0]}"; return; fi
	docker run \
		-p 3306:3306 \
		-e MYSQL_USER=root \
		-e MYSQL_PASSWORD=pass \
		-v $HOME/v/mysql:/var/lib/mysql \
		--name mysql \
		-d \
		mysql:5.7
}

d_mongo() {
	if [ "${1}" = "l" ]; then _docker_logwrap "${FUNCNAME[0]}"; return; fi
	docker run \
		-p 27017:27017 \
		-v $HOME/v/mongodb:/data/db \
		--name mongodb \
		-d \
		mongo:3.3.8;
}

d_mongouser() {
	if [ "${1}" = "l" ]; then _docker_logwrap "${FUNCNAME[0]}"; return; fi
	docker exec \
		-ti \
		mongodb \
		mongo admin --eval "db.createUser({user: 'root', pwd: 'pass', roles:[{role:'root',db:'admin'}]});";
}

d_nginx() {
	if [ "${1}" = "l" ]; then _docker_logwrap "${FUNCNAME[0]}"; return; fi
	docker run \
		-p 80:80 \
		--name nginx \
		-d \
		nginx:1.11.1
}
